
 const NoteSection = (props) => {
    let id = localStorage.getItem('cid');

    const [quickNotes, setQuickNotes] = useState(gArray.questions[id]?.Notes);
    const addnewnotes = (event) => {
        setQuickNotes(event.target.value);
    };

    const onadd = () => {
        let key = topicName.replace(/[^A-Z0-9]+/gi, '_').toLowerCase();
        // let id = localStorage.getItem("cid");
        if (id) {
            let que = data.questions;
            que[id].Notes = quickNotes.trim().length === 0 ? '' : quickNotes.trim();
            updateData(
                key,
                {
                    started: data.started,
                    doneQuestions: data.doneQuestions,
                    questions: que,
                },
                data.position
            );
            localStorage.removeItem('cid');
        } else {
            saveAndExitNotes();
        }
    };

    return (
        <>
            <div className='note-area'>
                <div className='note-container'>
                    <div className='question-title' style={{ color: 'black' }}></div>
                    <textarea maxLength='432' className='note-section' placeholder='your notes here' onChange={addnewnotes}></textarea>
                    <div className='button-container'>
                        <button className='note-exit' onClick={saveAndExitNotes}>
                            Close
                        </button>
                        <button className='note-save' onClick={onadd}>
                            Save
                        </button>
                    </div>
                </div>
            </div>
        </>
    );
};



.note-container {
	background: white;
	position: absolute;
	display: block;
	width: 50%;
	padding: 2% 1%;
	top: 30%;
	right: 25%;
	border: 2px solid black;
	border-radius: 0.5em;
}

.question-title {
	width: 100%;
	background: rgb(243, 243, 243);
	margin-bottom: 0.5em;
	font-weight: bold;
	resize: none;
	font-size: 1.2em;
	border: 0.5px solid black;
	border-radius: 5px;
	padding: 0.5em 0.8em;
	word-wrap: break-word;
}

.note-section {
	background: rgb(255, 255, 255);
	display: none;
	border: 2px solid #27ae60;
	border-radius: 5px;
	position: relative;
	margin-bottom: 0.5em;
	width: 100%;
	padding: 0.5em 0.8em;
	resize: none;
	height: 10em;
}
.note-section:focus-visible {
	outline: none;
}

::placeholder {
	color: black;
	opacity: 0.5;
}
.button-container {
	display: flex;
	align-items: right;
	flex-direction: row-reverse;
	justify-content: flex-end;
}

.note-exit {
	display: none;
	position: relative;
	width: 5em;
	background: #dc3545;
	margin-right: 0.3em;
	border-radius: 0.3em;
	color: white;
}

.note-save {
	display: none;
	position: relative;
	background: #27ae60;
	width: 5em;
	border-radius: 0.3em;
	margin-right: 0.3em;
	color: white;
}

.note-area {
	display: none;
	height: 10em;
	width: 10em;
	background: rgba(255, 255, 255, 0.1);
	backdrop-filter: blur(2px);

	top: 0;
	position: fixed;
	width: 100%;
	height: 100%;
}